from matplotlib import pyplot as pltprint('Plot4 ready')def game2():    global player_wins    player_wins={ }    def no_of_games(player_no):        if player_no not in player_wins:            player_wins[player_no] =1        else:            player_wins[player_no]+=1    def plot4():        # making a 5 X 5 board        end = False        board = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]        # win combos when 4 pieces are together        win_commbinations = ((20,21,22,23),(20,16,12,8),(20,15,10,5),(21,22,23,24),(21,17,13,9),(21,16,11,6),(22,17,12,7),(23,17,11,5),(23,18,13,8),(24,18,12,6),(24,19,14,9),(15,16,17,18),(15,11,7,3),(15,10,5,0),(16,17,18,19),(16,12,8,4),(16,11,6,1),(17,12,7,2),(18,13,8,3),(18,12,6,0),(19,14,9,4),(19,13,7,1),(10,11,12,13),(11,12,13,14),(5,6,7,8),(6,7,8,9),(0,1,2,3),(1,2,3,4))        # drawing the board        def draw():            print("{0:<3}{1:<3}{2:<3}{3:<3}{4:<3}" .format (board[0],  board[1],  board[2], board[3], board[4]))            print("{0:<3}{1:<3}{2:<3}{3:<3}{4:<3}" .format (board[5],  board[6],  board[7], board[8], board[9]))            print("{0:<3}{1:<3}{2:<3}{3:<3}{4:<3}" .format (board[10], board[11], board[12],board[13],board[14]))            print("{0:<3}{1:<3}{2:<3}{3:<3}{4:<3}" .format (board[15], board[16], board[17],board[18],board[19]))            print("{0:<3}{1:<3}{2:<3}{3:<3}{4:<3}" .format (board[20], board[21], board[22],board[23],board[24]))            print()        #rules for entering no of players        print("select the number of players (min 2 & max 4)")        print("player 1 gets X, player 2 gets O, player 3 gets % and player 4 gets $")        #input for no. of players        def nameplayer():            try:                no_of_players=int(input("enter the no. of players "))                    if no_of_players == 2 or no_of_players == 3 or no_of_players == 4:                    player_names=[ ]                    for i in range(no_of_players):                        name_of_player=input("enter name ")                        if name_of_player.isdigit() is False and name_of_player.isalnum() is True:                            pass                        else:                            while name_of_player.isdigit() is True or name_of_player.isalnum() is False:                                print("please enter a suitable name ")                                name_of_player=input("enter name ")                        player_names.append(name_of_player)                else:                    print("\nfollow limit please")                    nameplayer()                return player_names            except ValueError:                print("Please enter a number only")                nameplayer()        player_names=nameplayer()        # storing names of players        if len(player_names)==2:            player1=player_names[0]            player2=player_names[1]            print("welcome to the game",player1,"&",player2)        elif len(player_names)==3:            player1=player_names[0]            player2=player_names[1]            player3=player_names[2]            print("welcome to the game",player1,"&",player2,"&",player3)        else:            player1=player_names[0]            player2=player_names[1]            player3=player_names[2]            player4=player_names[3]            print("welcome to the game",player1,"&",player2,"&",player3,"&",player4)        #player1's turn        def p1():            n = choose_number()            if n<20:                if board[n+5] == "X" or board[n+5] == "O" or board[n+5] == "%" or board[n+5] == "$":                    if board[n] == "X" or board[n] == "O" or board[n]=="%" or board[n]=="$":                        print("\nYou can't go there. Try again")                        p1()                    else:                        board[n] = "X"                else:                    print("you piece can't float, please fill the bottom boxes first")                    p1()            else:                if board[n] == "X" or board[n] == "O" or board[n]=="%" or board[n]=="$":                        print("\nYou can't go there. Try again")                        p1()                 else:                    board[n] = "X"        #player2's turn        def p2():            n = choose_number()            if n<20:                if board[n+5] == "X" or board[n+5] == "O" or board[n+5] == "%" or board[n+5] == "$":                    if board[n] == "X" or board[n] == "O" or board[n]=="%" or board[n]=="$":                        print("\nYou can't go there. Try again")                        p2()                    else:                        board[n] = "O"                else:                    print("you piece can't float, please fill the bottom boxes first")                    p2()            else:                if board[n] == "X" or board[n] == "O" or board[n]=="%" or board[n]=="$":                        print("\nYou can't go there. Try again")                        p2()                else:                    board[n] = "O"        #player3's turn        def p3():            n = choose_number()            if n<20:                if board[n+5] == "X" or board[n+5] == "O" or board[n+5] == "%" or board[n+5] == "$":                    if board[n] == "X" or board[n] == "O" or board[n]=="%" or board[n]=="$":                        print("\nYou can't go there. Try again")                        p3()                    else:                        board[n] = "%"                else:                    print("you piece can't float, please fill the bottom boxes first")                    p3()            else:                if board[n] == "X" or board[n] == "O" or board[n]=="%" or board[n]=="$":                        print("\nYou can't go there. Try again")                        p3()                else:                    board[n] = "%"        #player4's turn        def p4():            n = choose_number()            if n<20:                if board[n+5] == "X" or board[n+5] == "O" or board[n+5] == "%" or board[n+5] == "$":                    if board[n] == "X" or board[n] == "O" or board[n]=="%" or board[n]=="$":                        print("\nYou can't go there. Try again")                        p4()                    else:                        board[n] = "$"                else:                    print("you piece can't float, please fill the bottom boxes first")                    p4()            else:                if board[n] == "X" or board[n] == "O" or board[n]=="%" or board[n]=="$":                        print("\nYou can't go there. Try again")                        p4()                else:                    board[n] = "$"        #making sure the no. entered is in valid                def choose_number():            while True:                while True:                    a = input()                    try:                        a  = int(a)                        a -= 1                        if a in range(25):                            return a                        else:                            print("\nThat's not on the board. Try again")                            continue                    except ValueError:                       print("\nThat's not a number. Try again")                       continue        # checking for win or tie        def check_board():            count = 0            for a in win_commbinations:                if board[a[0]] == board[a[1]] == board[a[2]] == board[a[3]] == "X":                    print(player1," Wins!\n")                    print("Congratulations!\n")                    no_of_games(player1)                    return True                if board[a[0]] == board[a[1]] == board[a[2]] == board[a[3]]== "O":                    print(player2 ,"Wins!\n")                    print("Congratulations!\n")                    no_of_games(player2)                    return True                if board[a[0]] == board[a[1]] == board[a[2]] == board[a[3]]== "%":                    print( player3," Wins!\n")                    print("Congratulations!\n")                    no_of_games(player3)                    return True                if board[a[0]] == board[a[1]] == board[a[2]] == board[a[3]]== "$":                    print( player4 ,"Wins!\n")                    print("Congratulations!\n")                    no_of_games(player4)                    return True            for a in range(25):                if board[a] == "X" or board[a] == "O" or board[a] == "%" or board[a] == "$":                    count += 1                if count == 25:                    print("The game ends in a Tie\n")                    return True        # 2 player game        if len(player_names)==2:            while not end:                draw()                end = check_board()                if end == True:                    break                print(player1," choose where to place a cross")                p1()                print()                draw()                end = check_board()                if end == True:                    break                print(player2, "choose where to place a nought")                p2()                print()        # 3 player game        elif len(player_names)==3:            while not end:                draw()                end = check_board()                if end == True:                    break                print(player1," choose where to place a cross")                p1()                print()                draw()                end = check_board()                if end == True:                    break                print(player2, "choose where to place a nought")                p2()                print()                draw()                end = check_board()                if end == True:                    break                print(player3, "choose where to place a percent")                p3()                print()        # 4 player game        else:            while not end:                draw()                end = check_board()                if end == True:                    break                print(player1," choose where to place a cross")                p1()                print()                draw()                end = check_board()                if end == True:                    break                print(player2, "choose where to place a nought")                p2()                print()                draw()                end = check_board()                if end == True:                    break                print(player3, "choose where to place a percent")                p3()                print()                draw()                end = check_board()                if end == True:                    break                print(player4, "choose where to place a dollar sign")                p4()                print()        def plotter(player_wins):            plt.bar(player_wins.keys(),player_wins.values())            plt.title("Player Names vs No. of wins")            plt.xlabel("Player Names")            plt.ylabel("No. of wins")            plt.show()        # another game        if input("Play again (y/n)\n") == "y":            print()            plot4()        else:            plotter(player_wins)            return 'thanks'    plot4()